var Parser                    = require('rpgparser-pages')
var parser                    = new Parser()
var path                      = require('path')
var config                    = require('./config')
var slugify                   = require('slug')
var fs                        = require('fs')
var jsdom                     = require('jsdom')

var c = JSON.parse(JSON.stringify(config))
c.outputExtension = 'html'
c.outputDir = path.join(__dirname, '..', '..', 'website', 'views', 'exported')
c.header = "<!-- \nDo NOT edit this file directly. It is compiled from pages in the source directroy. \n-->\n" + 

parser.init(c)
parser.registerHelper(function (Handlebars, gameData) {
  Handlebars.registerHelper('statistic', function(options) {
    var stat = Handlebars.helpers.getStatistic(options)
    return new Handlebars.SafeString('<span title="(' + stat.abbr + ') ' + stat.description + '">' + stat.name + '</span>')
  })
})
parser.registerHelper(function (Handlebars, gameData) {
  Handlebars.registerHelper('tag', function(options) {
    var tag = Handlebars.helpers.getTag(options)
    return new Handlebars.SafeString('<abbr title="' + tag.description + '">' + tag.name + '</abbr>')
  })
})
parser.registerHelper(function (Handlebars, gameData) {
  Handlebars.registerHelper('stat', function(options) {
    var stat = Handlebars.helpers.getStatistic(options)
    return new Handlebars.SafeString('<abbr title="' + stat.name + ': ' + stat.description + '">' + stat.abbr + '</abbr>')
  })
})

parser.registerHelper(function (Handlebars, gameData) {
  Handlebars.registerHelper('move', function(options) {
    var move = Handlebars.helpers.getMove(options)
    var base = 'moves'
    if(move.special) {
      page = 'specialmoves'
    }
    else {
      page = 'basicmoves'
    }
    return new Handlebars.SafeString('<a href="/' + page + '#' + slugify(move.name, {lower: true}) + '">' + move.name + '</a>')
  })
})

parser.registerHelper(function (Handlebars, gameData) {
  Handlebars.registerHelper('class', function(options) {
    var c = Handlebars.helpers.getClass(options)
    return new Handlebars.SafeString('<a href="/' + c.key + '">' + c.name + '</a>')
  })
})
parser.registerPackagedStep('xml2html', c.htmlStepConfig)
parser.registerStep(function (content, name, config, done) {
  jsdom.env(content,
    ["http://code.jquery.com/jquery.min.js"],
    function (err, window) {
      var $ = window.$
      $('h1,h2,h3,h4,h5').each(function (index, el) {
        $(el).attr("text", $(el).text())
      })
      var html = $('html')[0].innerHTML
      done(html)
    }
  )
})
parser.run()